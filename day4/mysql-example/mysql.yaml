---
apiVersion: v1 
kind: Namespace
metadata: 
  name: mysqlns
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-hsvc
  namespace: mysqlns
spec:
  clusterIP: None
  selector:
    app: mysql
    name: mysql-po
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-sts
  namespace: mysqlns
spec:
  selector:
    matchLabels:
      app: mysql
      name: mysql-po
  serviceName: mysql-hsvc
  replicas: 2
  template:
    metadata:
      name: mysql-po
      labels:
        app: mysql
        name: mysql-po
    spec:
      containers:
      - name: mysql-container
        image: mysql:8
        imagePullPolicy: IfNotPresent
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: changeit
        ports:
        - containerPort: 3306
          name: web
        volumeMounts:
        - name: mysql-pvc
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-pvc
      labels:
        app: mysql
        name: mysql-pvc
    spec:
      # default storage class name
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
# separating read and write replicas
apiVersion: v1
kind: Service
metadata:
  name: write-replica
  namespace: mysqlns
spec:
  type: ClusterIP
  selector:
    app: myapp
    name: mysql-po
    apps.kubernetes.io/pod-index: "0"
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: read-replica
  namespace: mysqlns
spec:
  type: ClusterIP
  selector:
    app: myapp
    name: mysql-po
  ports:
  - port: 3306
    targetPort: 3306


